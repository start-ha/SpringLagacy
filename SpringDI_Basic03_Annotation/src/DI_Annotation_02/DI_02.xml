<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
<!--
객체의 생성과 조립(주입)

spring 은 자신만의 컨테이너를 제공 (spring 전용 메모리 공간) 안에
xml 또는 annotation를 통해서 객체를 생성하고 조립하는 과정을 수행 (객체간의 관계 설정)

컨테이너 안에 생성돤 객체를 불러서 .... getbean() 함수

:IOC 컨테이너 (제어의 역전)
내가 주도했던 코드에서 Spring 이 주체 .....
:작은 단위의 부품을 만들고 놓고 그 것을 조립하는 행위 (레고블럭)
	
		MonitorViewer viewer = new MonitorViewer();
		Recorder recorder = new Recorder();
		viewer.setRecorder(recorder);
		
		
@Qualifier
목적 : @Autowired의 목적에서 동일 타입의 빈객체가 존재시 특정빈을 삽입할 수 있게 설정한다. 
설정위치 : @Autowired 어노테이션과 함께 사용된다.
추가설정 : 동일타입의 빈객체 설정에서 <qualifier value="[alias명]" />를 추가하여 준다.
옵션 : name - alias명
-->

	  <context:annotation-config />
	  <bean id="monitorViewer"  class="DI_Annotation_02.MonitorViewer"></bean>
	  
	  <bean id="xx"       class="DI_Annotation_02.Recorder">
	  		<qualifier value="recoder_1"></qualifier>
	  </bean>
	  <bean id="yy"       class="DI_Annotation_02.Recorder">
	  		<qualifier value="recoder_2"></qualifier>
	  </bean>
	 
</beans>



